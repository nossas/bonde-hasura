type Mutation {
  create_domain(
    domain: DomainInput
  ): DomainResult
}

type Mutation {
  create_record(
    record: RecordInput
  ): RecordResult
}

type Mutation {
  delete_domain(
    domain: DeleteDomainInput
  ): DeleteDomainResult
}

type Mutation {
  delete_records(
    records: DeleteRecordsInput
  ): DeleteRecordsResult
}

input DomainInput {
  domain_name: String!
  community_id: Int!
  comment: String
}

input DeleteDomainInput {
  dns_hosted_zone_id: Int!
  community_id: Int!
}

input RecordInput {
  name: String!
  value: [String!]!
  ttl: Int!
  record_type: String!
  hosted_zone_id: String!
  dns_hosted_zone_id: Int!
  community_id: Int!
}

input DeleteRecordsInput {
  dns_hosted_zone_id: Int!
  records: [Int]!
  community_id: Int!
}

input CertificateInput {
  hosted_zone_id: Int!
}

input PageInput {
  hosted_zone_id: Int!
}

input UpdateCertificateInput {
  id: Int!
}

type MailchimpStart {
  status: String
}

type MailchimpStatus {
  completed: Int
  waiting: Int
  failed: Int
  active: Int
  last_sync: String
  status: String
}

type DomainResult {
  id: Int!
  domain_name: String!
  comment: String
  name_servers: [String]!
  ns_ok: Boolean
  status: String
  created_at: String
  updated_at: String
  community_id: Int!
}

type CertificateResult {
  hosted_zone_id: Int!
  status: String
}

type PageResult {
  hosted_zone_id: Int!
  domain_name: String!
  certificate_ok: Boolean
  created_at: String
}

type DeleteDomainResult {
  id: Int
  status: String
}

type DeleteRecordsResult {
  dns_hosted_zone_id: Int!
  records: [Int]!
}

type RecordResult {
  name: String!
  dns_hosted_zone_id: Int!
  record_type: String!
  value: [String!]!
  ttl: Int!
  comment: String
}

type UpdateCertificateResult {
  id: Int
  domain: String
  is_active: Boolean
  dns_hosted_zone_id: Int
}

scalar String

